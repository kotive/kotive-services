{
	"name": "Alias",
	"description": "Merge two users using Segment",
	"documentation": "https://segment.com/docs/spec/alias/",
	"fields": [
		{
			"label": "Anonymous ID",
			"properties": {
				"parameter": "anonymousID",
  			"fieldType": "text",
				"helptext": "A pseudo-unique substitute for a User ID, for cases when you donâ€™t have an absolutely unique identifier."
  		},
			"readonly": false,
			"required": false,
			"visible": true
		},
		{
			"label": "Context",
			"properties": {
				"parameter": "context",
  			"fieldType": "text",
				"helptext": "A dictionary of extra information that provides useful context about a message. See https://segment.com/docs/spec/common#context"
  		},
			"readonly": false,
			"required": false,
			"visible": true
		},
		{
			"label": "Integrations",
			"properties": {
				"parameter": "integrations",
  			"fieldType": "text",
				"helptext": "A dictionary of integrations to either enable or disable. See https://segment.com/docs/spec/common#integrations"
  		},
			"readonly": false,
			"required": false,
			"visible": true
		},
		{
			"label": "Sent At",
			"properties": {
				"parameter": "sentAt",
  			"fieldType": "date",
				"helptext": "The timestamp when a message is sent to Segment, used for clock skew correction."
  		},
			"readonly": false,
			"required": false,
			"visible": true
		},
		{
			"label": "Timestamp",
			"properties": {
				"parameter": "timestamp",
  			"fieldType": "date",
				"helptext": "The timestamp when the message itself took place."
  		},
			"readonly": false,
			"required": false,
			"visible": true
		},
		{
			"label": "Type",
			"properties": {
				"parameter": "type",
				"fieldType": "radio",
				"choices": [
					{"key": "identify", "value": "Identify"},
					{"key": "group", "value": "Group"},
					{"key": "track", "value": "Track"},
					{"key": "page", "value": "Page"},
					{"key": "screen", "value": "Screen"},
					{"key": "alias", "value": "Alias"}
				],
				"default": "identify",
				"helptext": "The type of message, corresponding to the API method."
  		},
			"readonly": false,
			"required": false,
			"visible": true
		},
		{
			"label": "User ID",
			"properties": {
				"parameter": "userID",
  			"fieldType": "text",
				"helptext": "A unique identifier for the user in your database."
  		},
			"readonly": false,
			"required": true,
			"visible": true
		},
		{
			"label": "Previous ID",
			"properties": {
				"parameter": "previousID",
  			"fieldType": "text",
				"helptext": "The previous unique identifier for the user."
  		},
			"readonly": false,
			"required": true,
			"visible": true
		}
	],
	"method": "POST",
	"endpoint": "",
	"request": {
		"anonymousID": "{field.anonymousID}",
		"context": "{field.context}",
		"integrations": "{field.integrations}",
		"sentAt": "{field.sentAt}",
		"timestamp": "{field.timestamp}",
		"type": "{field.type}",
		"userID": "{field.userID}",
		"previousID": "{field.previousID}"
	},
	"response": {
		"success": {
			"Code": 200,
			"Message": "Ok"
		},
		"error": {}
	}
}
